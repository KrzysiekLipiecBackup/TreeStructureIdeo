@model IEnumerable<TreeStructureIdeo.Models.Knots>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Knots" asp-action="Index" method="get">
    <p>
        Title: <input type="text" name="SearchString">
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    @{

        List<KnotElements> initModel = new List<KnotElements>();
        foreach (var i in Model)
        {
            KnotElements temp = new KnotElements(i);
            initModel.Add(temp);
        }

        foreach (var i in initModel)    //child
        {
            foreach (var j in initModel) //parrent
            {
                if (j.Id == i.ParentId)
                {
                    j.AddChildren(i);
                }
            }
        }


        //List<KnotElements> InitModel = new List<KnotElements>(Model.ToList());



        <thead>
                <tr>

                    <th>
                        @Html.DisplayNameFor(model => model.Id)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ParentId)
                    </th>
                    <th></th>
                    <th>
                        @Html.DisplayNameFor(model => model.Text)
                    </th>

                </tr>
        </thead>

        async Task<string> Recursion(List<TreeStructureIdeo.Models.KnotElements> kElements)
        {
            <tbody>
                @foreach (var item in kElements)
                {
                <tr>

                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ParentId)
                    </td>
                    @if (item.Children.Any())
                    {

                        <td>
                            <strong>></strong>
                        </td>
                    }
                    else
                    {
                        <td></td>
                    }
                    <td>
                        @Html.DisplayFor(modelItem => item.Text)
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                    @*<td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>*@

                </tr>
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td>
                            @if (item.Children.Any())
                            {
                                <table>
                                    @await Recursion(item.Children)
                                </table>
                            }
                            else
                            { <table></table>}
                        </td>
                        <td></td>
                    </tr>

                }
            </tbody>
            return "";
        }
        if (initModel.Any())
        {
        @Recursion(initModel[0].Children);
        }
        }
</table>
